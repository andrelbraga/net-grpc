// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v4.23.4
// source: private-service.proto

package private_service

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	PrivateBookService_GetRandomBook_FullMethodName = "/privateService.PrivateBookService/GetRandomBook"
	PrivateBookService_GetBookDetail_FullMethodName = "/privateService.PrivateBookService/GetBookDetail"
)

// PrivateBookServiceClient is the client API for PrivateBookService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type PrivateBookServiceClient interface {
	GetRandomBook(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (PrivateBookService_GetRandomBookClient, error)
	GetBookDetail(ctx context.Context, in *GetBookDetailsRequest, opts ...grpc.CallOption) (*GetBookDetailsResponse, error)
}

type privateBookServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewPrivateBookServiceClient(cc grpc.ClientConnInterface) PrivateBookServiceClient {
	return &privateBookServiceClient{cc}
}

func (c *privateBookServiceClient) GetRandomBook(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (PrivateBookService_GetRandomBookClient, error) {
	stream, err := c.cc.NewStream(ctx, &PrivateBookService_ServiceDesc.Streams[0], PrivateBookService_GetRandomBook_FullMethodName, opts...)
	if err != nil {
		return nil, err
	}
	x := &privateBookServiceGetRandomBookClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type PrivateBookService_GetRandomBookClient interface {
	Recv() (*GetDisplayBooksResponse, error)
	grpc.ClientStream
}

type privateBookServiceGetRandomBookClient struct {
	grpc.ClientStream
}

func (x *privateBookServiceGetRandomBookClient) Recv() (*GetDisplayBooksResponse, error) {
	m := new(GetDisplayBooksResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *privateBookServiceClient) GetBookDetail(ctx context.Context, in *GetBookDetailsRequest, opts ...grpc.CallOption) (*GetBookDetailsResponse, error) {
	out := new(GetBookDetailsResponse)
	err := c.cc.Invoke(ctx, PrivateBookService_GetBookDetail_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PrivateBookServiceServer is the server API for PrivateBookService service.
// All implementations must embed UnimplementedPrivateBookServiceServer
// for forward compatibility
type PrivateBookServiceServer interface {
	GetRandomBook(*emptypb.Empty, PrivateBookService_GetRandomBookServer) error
	GetBookDetail(context.Context, *GetBookDetailsRequest) (*GetBookDetailsResponse, error)
	mustEmbedUnimplementedPrivateBookServiceServer()
}

// UnimplementedPrivateBookServiceServer must be embedded to have forward compatible implementations.
type UnimplementedPrivateBookServiceServer struct {
}

func (UnimplementedPrivateBookServiceServer) GetRandomBook(*emptypb.Empty, PrivateBookService_GetRandomBookServer) error {
	return status.Errorf(codes.Unimplemented, "method GetRandomBook not implemented")
}
func (UnimplementedPrivateBookServiceServer) GetBookDetail(context.Context, *GetBookDetailsRequest) (*GetBookDetailsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBookDetail not implemented")
}
func (UnimplementedPrivateBookServiceServer) mustEmbedUnimplementedPrivateBookServiceServer() {}

// UnsafePrivateBookServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to PrivateBookServiceServer will
// result in compilation errors.
type UnsafePrivateBookServiceServer interface {
	mustEmbedUnimplementedPrivateBookServiceServer()
}

func RegisterPrivateBookServiceServer(s grpc.ServiceRegistrar, srv PrivateBookServiceServer) {
	s.RegisterService(&PrivateBookService_ServiceDesc, srv)
}

func _PrivateBookService_GetRandomBook_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(emptypb.Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(PrivateBookServiceServer).GetRandomBook(m, &privateBookServiceGetRandomBookServer{stream})
}

type PrivateBookService_GetRandomBookServer interface {
	Send(*GetDisplayBooksResponse) error
	grpc.ServerStream
}

type privateBookServiceGetRandomBookServer struct {
	grpc.ServerStream
}

func (x *privateBookServiceGetRandomBookServer) Send(m *GetDisplayBooksResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _PrivateBookService_GetBookDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBookDetailsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PrivateBookServiceServer).GetBookDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: PrivateBookService_GetBookDetail_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PrivateBookServiceServer).GetBookDetail(ctx, req.(*GetBookDetailsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// PrivateBookService_ServiceDesc is the grpc.ServiceDesc for PrivateBookService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var PrivateBookService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "privateService.PrivateBookService",
	HandlerType: (*PrivateBookServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetBookDetail",
			Handler:    _PrivateBookService_GetBookDetail_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetRandomBook",
			Handler:       _PrivateBookService_GetRandomBook_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "private-service.proto",
}
